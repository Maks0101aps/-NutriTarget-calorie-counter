{"ast":null,"code":"import create from'zustand';import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';export const useAuthStore=create(set=>{// Initialize state from localStorage if available\nconst token=localStorage.getItem('token');const userStr=localStorage.getItem('user');return{user:userStr?JSON.parse(userStr):null,token,isAuthenticated:!!token,isLoading:false,error:null,login:async(email,password)=>{try{set({isLoading:true,error:null});const response=await axios.post(`${API_URL}/auth/login`,{email,password});const{token,user}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));// Update state\nset({user,token,isAuthenticated:true,isLoading:false});}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';set({error:errorMessage,isLoading:false});}},register:async(name,email,password)=>{try{set({isLoading:true,error:null});const response=await axios.post(`${API_URL}/auth/register`,{name,email,password});const{token,user}=response.data;// Store in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));// Update state\nset({user,token,isAuthenticated:true,isLoading:false});}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';set({error:errorMessage,isLoading:false});}},logout:()=>{// Clear localStorage\nlocalStorage.removeItem('token');localStorage.removeItem('user');// Reset state\nset({user:null,token:null,isAuthenticated:false});},clearError:()=>{set({error:null});},updateUser:updatedUser=>{// Update localStorage\nlocalStorage.setItem('user',JSON.stringify(updatedUser));// Update state\nset({user:updatedUser});}};});","map":{"version":3,"names":["create","axios","API_URL","process","env","REACT_APP_API_URL","useAuthStore","set","token","localStorage","getItem","userStr","user","JSON","parse","isAuthenticated","isLoading","error","login","email","password","response","post","data","setItem","stringify","_error$response","_error$response$data","errorMessage","message","register","name","_error$response2","_error$response2$data","logout","removeItem","clearError","updateUser","updatedUser"],"sources":["/home/maksym/projects/-NutriTarget-calorie-counter/frontend/src/store/authStore.ts"],"sourcesContent":["import create from 'zustand';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\ninterface User {\n  id: number;\n  email: string;\n  name?: string;\n  age?: number;\n  gender?: string;\n  height?: number;\n  weight?: number;\n  activityLevel?: string;\n  goal?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n  updateUser: (updatedUser: User) => void;\n}\n\nexport const useAuthStore = create<AuthState>((set) => {\n  // Initialize state from localStorage if available\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  \n  return {\n    user: userStr ? JSON.parse(userStr) : null,\n    token,\n    isAuthenticated: !!token,\n    isLoading: false,\n    error: null,\n    \n    login: async (email, password) => {\n      try {\n        set({ isLoading: true, error: null });\n        \n        const response = await axios.post(`${API_URL}/auth/login`, { \n          email, \n          password \n        });\n        \n        const { token, user } = response.data;\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        // Update state\n        set({\n          user,\n          token,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      } catch (error: any) {\n        const errorMessage = error.response?.data?.message || 'Login failed';\n        set({ error: errorMessage, isLoading: false });\n      }\n    },\n    \n    register: async (name, email, password) => {\n      try {\n        set({ isLoading: true, error: null });\n        \n        const response = await axios.post(`${API_URL}/auth/register`, { \n          name,\n          email, \n          password\n        });\n        \n        const { token, user } = response.data;\n        \n        // Store in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        // Update state\n        set({\n          user,\n          token,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      } catch (error: any) {\n        const errorMessage = error.response?.data?.message || 'Registration failed';\n        set({ error: errorMessage, isLoading: false });\n      }\n    },\n    \n    logout: () => {\n      // Clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Reset state\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n    },\n    \n    clearError: () => {\n      set({ error: null });\n    },\n    \n    updateUser: (updatedUser) => {\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      // Update state\n      set({\n        user: updatedUser\n      });\n    }\n  };\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}